Git 学习笔记
一、新建Git仓库
首先新建一个本地目录，存放需要被版本管理的文件

其次，进入当该目录，使用 git init命令将该目录变为一个空的Git仓库。

二、向仓库中提交文件

在仓库目录下（可以是该目录的子目录）新建一个readme.txt文件并编辑

使用如下命令提交文件
git add readme.txt
git commit -m "add readme.txt"

可以通过git status查看仓库当前状态

三、版本回退

如果readme.txt被修改了，可以通过
git diff readme.txt 命令查看readme.txt 与上次提交的文件哪些地方被修改

如果想恢复到上一个提交的版本，使用
git reset --hard HEAD^ 

HEAD表示当前版本，HEAD^ 表示上一个版本，类似的HEAD^^表示上上一个版本， 如果版本过多 可以使用如 HEAD~10 表示前面第10个版本

通过git log查看提交记录

git relog 查看输入的命令的历史记录,而且可以获取commit_id

git reset --hard commit_id 可以在各个提交版本之间切换

四、工作区与暂存区

工作区即本地保存文件的工作目录

工作区有一个隐藏目录 .git，称为Git的版本库，版本库里存了很多东西，其中最重要的是称为stage（或者index）的暂存区和Git为我们自动创建的第一个分支master,
以及指向master的指针HEAD

当我们把文件放到Git的版本库里时分为两步：
第一步执行 git add 把文件添加进去，实际上就是先把文件修改添加到暂存区，
第二步 执行 git commit 提交更改，把暂存区的所有内容提交到当前分支。

所以可以add 很多个文件后，执行一次commit 将所有修改提交 

五、管理修改

Git 跟踪管理的是修改，而非文件

六、撤销修改

场景一、 当该乱了工作区某个文件的内容，想要直接丢弃工作区的修改时，用命令 git checkout -- file

场景二、当你不断改乱了工作区某个文件的内容，还通过add 命令添加到了暂存区，向撤销修改。分两步，首先
git reset HEAD filename 就回到了场景一，然后再按场景一操作

场景三、如果是已经提交到版本库的修改。可以通过版本回退，撤销本次提交，前提是没有推送到远程版本库

七、删除文件
如果你把工作区内的某个文件删除这个时候，Git知道你删除了文件，因此，工作区和版本库就不一致了，git status命令会立刻告诉你哪些文件被删除了

现在你可以通过 git rm filename 
git commit 
从版本库中删除该文件
或者git checkout -- filename 撤销删除。然后工作区和版本库保持一致

八、远程仓库

在github创建一个远程仓库 learngit

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；

关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

九、从远程仓库克隆

要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。

Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。